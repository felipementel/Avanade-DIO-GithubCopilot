name: Validation Code v1 | SonarCloud
on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  imageName: avanade-dio-github-copilot
  dotnetVersion: 8.x
  csprojFolder: src/Avanade.DIO.GithubCopilot.API/Avanade.DIO.GithubCopilot.API.csproj

jobs:
  build-and-sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: ${{ steps.cache-sonar-scanner.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"felipementel_Avanade-DIO-GithubCopilot" /o:"felipementel" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.exclusions="**/Migrations/**"
          dotnet restore ${{ env.csprojFolder }}
          dotnet build ${{ env.csprojFolder }} --no-incremental
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
